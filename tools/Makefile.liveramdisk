#
# LiveRamdisk make script
# (c) 2007 Paul Sokolovsky
# This is example of make-bootbundle.py usage, based on Angstrom images 
# generated by OpenEmbedded.
#

# Supposed to be overriden on commandline
MACHINE=h4000
SYSTYPE=glibc
IMGTYPE=x11

OEBUILD=../../build-oe-angstrom
MACHINE_IMAGE=$(MACHINE)
MACHINE_KERNEL=$(MACHINE)
SYSTYPE_IMAGE=$(SYSTYPE)
SYSTYPE_KERNEL=$(SYSTYPE)
OEDEPLOY_IMAGE=$(OEBUILD)/tmp/deploy/$(SYSTYPE_IMAGE)/images/$(MACHINE_IMAGE)
OEDEPLOY_KERNEL=$(OEBUILD)/tmp/deploy/$(SYSTYPE_KERNEL)/images/$(MACHINE_KERNEL)
# For LIVERAMDISK_DIR, machine is arbitrary, the image is machine-independent
LIVERAMDISK_DIR=$(OEBUILD)/tmp/deploy/uclibc/images/h4000
HARET=haret-0.5.0.exe
LIVERAMDISK_SCRIPT=safeboot-initramfs.txt

all:
	liveramdisk_file=`ls -1 -t $(LIVERAMDISK_DIR)/*-liveramdisk-* | head -n 1`; \
	kernel_file=`find $(OEDEPLOY_KERNEL) -name 'zImage-*$(MACHINE)*' | sort -r | head -n 1`; \
	image_file=`find $(OEDEPLOY_IMAGE) -name 'A*$(IMGTYPE)*$(MACHINE).rootfs.jffs2' | sort -r | head -n 1`; \
	echo LiveRamdisk loader image: $$liveramdisk_file; \
	echo LiveRamdisk HaRET script: $(LIVERAMDISK_SCRIPT); \
	echo Kernel: $$kernel_file; \
	echo Rootfs image: $$image_file; \
	\
	gzip -d -c $$liveramdisk_file | ./cpio-append.py $$image_file initrd.jffs2 | gzip -c > $$(basename $$image_file).liveramdisk.cpio.gz; \
	./make-bootbundle.py \
	    $(HARET) \
	    $$kernel_file \
	    $$(basename $$image_file).liveramdisk.cpio.gz \
	    $(LIVERAMDISK_SCRIPT) \
	    -o Angstrom-liveramdisk.exe

bootmanager:
	kernel_file=`find $(OEDEPLOY_KERNEL) -name 'zImage-*$(MACHINE_KERNEL)*' | sort -r | head -n 1`; \
	image_file=$(OEDEPLOY_IMAGE)/`cd $(OEDEPLOY_IMAGE); ls -t -1 A*$(IMGTYPE)*$(MACHINE_IMAGE).rootfs.cpio.gz | head -n 1`; \
	echo HaRET script: $(LIVERAMDISK_SCRIPT); \
	echo Kernel: $$kernel_file; \
	echo Rootfs image: $$image_file; \
	\
	./make-bootbundle.py -v \
	    $(HARET) \
	    $$kernel_file \
	    $$image_file \
	    $(LIVERAMDISK_SCRIPT) \
	    -o Angstrom-boot.exe
